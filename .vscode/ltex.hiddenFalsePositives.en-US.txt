{"rule":"MISSING_GENITIVE","sentence":"^\\QGitpod development Variables\\E$"}
{"rule":"UPPERCASE_SENTENCE_START","sentence":"^\\Qfavicon.io For generating the favicon.\\E$"}
{"rule":"MANY_NN","sentence":"^\\QUserAccount :left_right_arrow: Review: Many to One\nA UserAccount can be related to many Review, but a Review can be related to one UserAccount.\\E$"}
{"rule":"FILE_EXTENSIONS_CASE","sentence":"^\\QThen Amazon Web Services (or AWS), and more specifically s3 (simple storage service) will be set up in order to host all static files (css, js, images).\\E$"}
{"rule":"EN_CONTRACTION_SPELLING","sentence":"^\\QId}`).val()); var minusDisabled = currentValue < 2; var plusDisabled = currentValue > } // Increment quantity $('.increment-qty').click(function(e) { e.preventDefault(); var closestInput = $(this).closest('.input-group').find('.qty_input')[0]; var currentValue = parseInt($(closestInput).val()); $(closestInput).val(currentValue + 1); }); // Decrement quantity $('.decrement-qty').click(function(e) { e.preventDefault(); var closestInput = $(this).closest('.input-group').find('.qty_input')[0]; var currentValue = parseInt($(closestInput).val()); $(closestInput).val(currentValue - 1); }); </script>\\E$"}
{"rule":"EN_UNPAIRED_BRACKETS","sentence":"^\\QId}`).val()); var minusDisabled = currentValue < 2; var plusDisabled = currentValue > } // Increment quantity $('.increment-qty').click(function(e) { e.preventDefault(); var closestInput = $(this).closest('.input-group').find('.qty_input')[0]; var currentValue = parseInt($(closestInput).val()); $(closestInput).val(currentValue + 1); }); // Decrement quantity $('.decrement-qty').click(function(e) { e.preventDefault(); var closestInput = $(this).closest('.input-group').find('.qty_input')[0]; var currentValue = parseInt($(closestInput).val()); $(closestInput).val(currentValue - 1); }); </script>\\E$"}
{"rule":"UPPERCASE_SENTENCE_START","sentence":"^\\Qmax = ${maxValue}`) } }); // Increment product quantity $('.increment-qty').click(function(e) { e.preventDefault(); let closestInput = $(this).closest('.input-group').find('.qty_input')[0]; let currentValue = parseInt($(closestInput).val()); $(closestInput).val(currentValue + 1); let itemId = $(this).data('item_id'); handleEnableDisable(itemId); }); // Decrement product quantity $('.decrement-qty').click(function(e) { e.preventDefault(); let closestInput = $(this).closest('.input-group').find('.qty_input')[0]; let currentValue = parseInt($(closestInput).val()); $(closestInput).val(currentValue - 1); let itemId = $(this).data('item_id'); handleEnableDisable(itemId); }); </script>\\E$"}
{"rule":"MORFOLOGIK_RULE_EN_US","sentence":"^\\QyInput) { let form = quantityInput.closest('.update-form'); form.submit(); } // Disable +/- buttons outside 1 and max value range function handleEnableDisable(itemId) { let currentValue = parseInt($(`#id_qty_${itemId}`).val()); let maxValue = parseInt($(`#id_qty_${itemId}`).attr('max')); let minusDisabled = currentValue < 2; let plusDisabled = currentValue >= maxValue; $(`#decrement-qty_${itemId}`).prop('disabled', minusDisabled); $(`#increment-qty_${itemId}`).prop('disabled', plusDisabled); } // Listen to changes on the input box to enable/disable buttons // Set the value to min or max depending on input after giving feedback $('.qty_input').change(function() { let itemId = $(this).data('item_id'); let currentInput = $(this) let currentValue = parseInt($(`#id_qty_${itemId}`).val()); let maxValue = parseInt($(`#id_qty_${itemId}`).attr('max')); let newValue; var quantityFeedback; if ( currentValue > maxValue ){ quantityFeedback = $(`#too_high_qty_${itemId}`); newValue = maxValue; } else if ( currentValue <= 0 ) { quantityFeedback = $(`#too_small_qty_${itemId}`); newValue = 1; } currentInput.val(newValue); handleEnableDisable(itemId); quantityFeedback.show(); setTimeout(function(){ quantityFeedback.hide(); }, 4000); let form = $(this).closest('.update-form'); form.submit(); }); // Increment product quantity $('.increment-qty').click(function(e) { e.preventDefault(); let closestInput = $(this).closest('.input-group').find('.qty_input')[0]; let currentValue = parseInt($(closestInput).val()); $(closestInput).val(currentValue + 1); let itemId = $(this).data('item_id'); handleEnableDisable(itemId); let form = $(this).closest('.update-form'); form.submit(); }); </script>\\E$"}
